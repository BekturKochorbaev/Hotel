name: Deploy to Server

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up SSH key
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Archive files
      run: |
        tar -czf deploy.tar.gz . || echo "tar gave a warning, continuing anyway"

    - name: Copy archive to server
      run: |
        scp -o StrictHostKeyChecking=no deploy.tar.gz ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/tmp/deploy.tar.gz

    - name: Deploy on remote server
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          set -e  # Прервать, если ошибка

          # Распаковка нового кода
          rm -rf ~/Hotel/*
          mkdir -p ~/Hotel
          tar -xzf /tmp/deploy.tar.gz -C ~/Hotel
          rm /tmp/deploy.tar.gz

          cd ~/Hotel/booking

          # Сборка образов (не запускаем сразу web!)
          docker compose build

          # Запускаем БД и Nginx
          docker compose up -d db nginx
          echo "Waiting for PostgreSQL..."
          sleep 10

          # Применяем миграции и собираем статику
          docker compose run --rm web_migrate

          # Запускаем веб-приложение
          docker compose up -d web

          docker compose ps
          echo "✅ Deployment completed"
        EOF
