import requests

BASE_URL = "http://localhost:8000/api/"  # –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ prod URL —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è

def test_user_registration_and_login():
    print("üß™ Testing user registration and JWT login...")

    # –®–∞–≥ 1: —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
    reg_data = {
        "username": "apitestuser",
        "email": "apitestuser@example.com",
        "password1": "VeryStrongPass123!",
        "password2": "VeryStrongPass123!"
    }
    r = requests.post(BASE_URL + "dj-rest-auth/registration/", json=reg_data)
    assert r.status_code == 201, f"Registration failed: {r.text}"
    print("‚úÖ Registration passed")

    # –®–∞–≥ 2: –ª–æ–≥–∏–Ω
    login_data = {
        "email": reg_data["email"],
        "password": reg_data["password1"]
    }
    r = requests.post(BASE_URL + "dj-rest-auth/login/", json=login_data)
    assert r.status_code == 200, f"Login failed: {r.text}"
    token = r.json()["access"]
    print("‚úÖ Login passed")

    return token


def test_review_creation(token: str):
    print("üß™ Testing review creation...")
    headers = {"Authorization": f"Bearer {token}"}
    # –ó–∞–º–µ–Ω–∏—Ç–µ ID –æ—Ç–µ–ª—è, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    review_data = {
        "text": "Fantastic hotel from API test!",
        "stars": 5,
        "hotel": 1  # ID —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –æ—Ç–µ–ª—è
    }
    r = requests.post(BASE_URL + "review_create/", json=review_data, headers=headers)
    assert r.status_code == 201, f"Review creation failed: {r.text}"
    print("‚úÖ Review creation passed")


def test_booking_creation(token: str):
    print("üß™ Testing booking creation...")
    headers = {"Authorization": f"Bearer {token}"}
    booking_data = {
        "room": 1,  # ID —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–æ–º–Ω–∞—Ç—ã
        "check_in": "2025-07-01",
        "check_out": "2025-07-05"
    }
    r = requests.post(BASE_URL + "booking/", json=booking_data, headers=headers)
    assert r.status_code == 201, f"Booking failed: {r.text}"
    print("‚úÖ Booking creation passed")


if __name__ == "__main__":
    token = test_user_registration_and_login()
    test_review_creation(token)
    test_booking_creation(token)
